{"ast":null,"code":"import _asyncToGenerator from \"/Users/mozartcatrina/Desktop/jorgito/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, inject } from \"@angular/core\";\nimport { FirebaseService } from \"src/app/services/firebase.service\";\nimport { UtilsService } from \"src/app/services/utils.service\";\nimport { AddUpdateStudentsComponent } from \"src/app/shared/components/add-update-students/add-update-students.component\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nlet HomePage = class HomePage {\n  constructor() {\n    var _this = this;\n    this.firebaseSvc = inject(FirebaseService);\n    this.utilsSvc = inject(UtilsService);\n    this.divPhoto = false;\n    this.setDivPhoto = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (b) {\n        return _this.divPhoto = b;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n  ngOnInit() {}\n  signOut() {\n    this.firebaseSvc.signOut();\n  }\n  addUpdateStudnets() {\n    this.utilsSvc.presentModal({\n      component: AddUpdateStudentsComponent,\n      cssClass: \"add-update-modal\"\n    });\n  }\n  takeImage() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.setDivPhoto(true);\n      _this2.delay(1000).then(() => {\n        const html5QrcodeScanner = new Html5QrcodeScanner(\"reader\", {\n          fps: 30,\n          qrbox: {\n            width: 250,\n            height: 250\n          }\n        }, /* verbose= */false);\n        html5QrcodeScanner.render(_this2.onScanSuccess, _this2.onScanFailure);\n      });\n    })();\n  }\n  routerlinkIntro() {\n    this.utilsSvc.routerLink(\"/main/intro\");\n  }\n  onScanSuccess(decodedText, decodedResult) {\n    // handle the scanned code as you like, for example:\n    console.log(decodedText);\n    console.log(decodedResult);\n    console.log(\"cerrar\");\n    this.setDivPhoto(false);\n  }\n  onScanFailure(error) {\n    // handle scan failure, usually better to ignore and keep scanning.\n    // for example:\n    console.warn(`Code scan error = ${error}`);\n  }\n  delay(time) {\n    return new Promise(resolve => setTimeout(resolve, time));\n  }\n};\nHomePage = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.page.html\",\n  styleUrls: [\"./home.page.scss\"]\n})], HomePage);\nexport { HomePage };","map":{"version":3,"names":["Component","inject","FirebaseService","UtilsService","AddUpdateStudentsComponent","Html5QrcodeScanner","HomePage","constructor","_this","firebaseSvc","utilsSvc","divPhoto","setDivPhoto","_ref","_asyncToGenerator","b","_x","apply","arguments","ngOnInit","signOut","addUpdateStudnets","presentModal","component","cssClass","takeImage","_this2","delay","then","html5QrcodeScanner","fps","qrbox","width","height","render","onScanSuccess","onScanFailure","routerlinkIntro","routerLink","decodedText","decodedResult","console","log","error","warn","time","Promise","resolve","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mozartcatrina/Desktop/jorgito/registrApp/src/app/pages/main/home/home.page.ts"],"sourcesContent":["import { Component, OnInit, inject } from \"@angular/core\";\nimport { FirebaseService } from \"src/app/services/firebase.service\";\nimport { UtilsService } from \"src/app/services/utils.service\";\nimport { AddUpdateStudentsComponent } from \"src/app/shared/components/add-update-students/add-update-students.component\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.page.html\",\n  styleUrls: [\"./home.page.scss\"],\n})\nexport class HomePage implements OnInit {\n  ngOnInit(): void {}\n\n  firebaseSvc = inject(FirebaseService);\n  utilsSvc = inject(UtilsService);\n  divPhoto = false;\n\n  signOut() {\n    this.firebaseSvc.signOut();\n  }\n\n  addUpdateStudnets() {\n    this.utilsSvc.presentModal({\n      component: AddUpdateStudentsComponent,\n      cssClass: \"add-update-modal\",\n    });\n  }\n\n  async takeImage() {\n    this.setDivPhoto(true);\n    this.delay(1000).then(() => {\n      const html5QrcodeScanner = new Html5QrcodeScanner(\n        \"reader\",\n        { fps: 30, qrbox: { width: 250, height: 250 } },\n        /* verbose= */ false\n      );\n      html5QrcodeScanner.render(this.onScanSuccess, this.onScanFailure);\n    });\n  }\n\n  routerlinkIntro() {\n    this.utilsSvc.routerLink(\"/main/intro\");\n  }\n\n  onScanSuccess(decodedText, decodedResult) {\n    // handle the scanned code as you like, for example:\n    console.log(decodedText);\n    console.log(decodedResult);\n    console.log(\"cerrar\");\n    this.setDivPhoto(false);\n  }\n\n  onScanFailure(error) {\n    // handle scan failure, usually better to ignore and keep scanning.\n    // for example:\n    console.warn(`Code scan error = ${error}`);\n  }\n\n  setDivPhoto = async (b: boolean) => (this.divPhoto = b);\n\n  delay(time) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,0BAA0B,QAAQ,6EAA6E;AACxH,SAASC,kBAAkB,QAAQ,cAAc;AAOjD,IAAaC,QAAQ,GAArB,MAAaA,QAAQ;EAArBC,YAAA;IAAA,IAAAC,KAAA;IAGE,KAAAC,WAAW,GAAGR,MAAM,CAACC,eAAe,CAAC;IACrC,KAAAQ,QAAQ,GAAGT,MAAM,CAACE,YAAY,CAAC;IAC/B,KAAAQ,QAAQ,GAAG,KAAK;IA2ChB,KAAAC,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,CAAU;QAAA,OAAMP,KAAI,CAACG,QAAQ,GAAGI,CAAC;MAAA,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAH,IAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA;EAKzD;EApDEC,QAAQA,CAAA,GAAU;EAMlBC,OAAOA,CAAA;IACL,IAAI,CAACX,WAAW,CAACW,OAAO,EAAE;EAC5B;EAEAC,iBAAiBA,CAAA;IACf,IAAI,CAACX,QAAQ,CAACY,YAAY,CAAC;MACzBC,SAAS,EAAEnB,0BAA0B;MACrCoB,QAAQ,EAAE;KACX,CAAC;EACJ;EAEMC,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAZ,iBAAA;MACbY,MAAI,CAACd,WAAW,CAAC,IAAI,CAAC;MACtBc,MAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,MAAK;QACzB,MAAMC,kBAAkB,GAAG,IAAIxB,kBAAkB,CAC/C,QAAQ,EACR;UAAEyB,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAG;QAAE,CAAE,EAC/C,cAAe,KAAK,CACrB;QACDJ,kBAAkB,CAACK,MAAM,CAACR,MAAI,CAACS,aAAa,EAAET,MAAI,CAACU,aAAa,CAAC;MACnE,CAAC,CAAC;IAAC;EACL;EAEAC,eAAeA,CAAA;IACb,IAAI,CAAC3B,QAAQ,CAAC4B,UAAU,CAAC,aAAa,CAAC;EACzC;EAEAH,aAAaA,CAACI,WAAW,EAAEC,aAAa;IACtC;IACAC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxBE,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAAC9B,WAAW,CAAC,KAAK,CAAC;EACzB;EAEAwB,aAAaA,CAACO,KAAK;IACjB;IACA;IACAF,OAAO,CAACG,IAAI,CAAC,qBAAqBD,KAAK,EAAE,CAAC;EAC5C;EAIAhB,KAAKA,CAACkB,IAAI;IACR,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,IAAI,CAAC,CAAC;EAC5D;CACD;AArDYvC,QAAQ,GAAA2C,UAAA,EALpBjD,SAAS,CAAC;EACTkD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,kBAAkB;EAC/BC,SAAS,EAAE,CAAC,kBAAkB;CAC/B,CAAC,C,EACW9C,QAAQ,CAqDpB;SArDYA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}