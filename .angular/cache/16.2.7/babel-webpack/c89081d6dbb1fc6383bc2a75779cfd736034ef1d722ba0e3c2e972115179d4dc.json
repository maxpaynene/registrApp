{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass RickAndMortyService {\n  constructor(http) {\n    this.http = http;\n  }\n  getCharacters(params) {\n    return this.http.get(environment.baseUrl + environment.character, {\n      params\n    });\n  }\n}\n_class = RickAndMortyService;\n_class.ɵfac = function RickAndMortyService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { RickAndMortyService };","map":{"version":3,"names":["environment","RickAndMortyService","constructor","http","getCharacters","params","get","baseUrl","character","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mozartcatrina/Desktop/jorgito/registrApp/src/app/services/rick-and-morty.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RickAndMortyService {\n\n  constructor(private http: HttpClient) { }\n\n  getCharacters(params: any){\n\n    return this.http.get(environment.baseUrl + environment.character, { params })\n\n  }\n\n}\n"],"mappings":";AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAE1D,MAGaC,mBAAmB;EAE9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAaA,CAACC,MAAW;IAEvB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAACN,WAAW,CAACO,OAAO,GAAGP,WAAW,CAACQ,SAAS,EAAE;MAAEH;IAAM,CAAE,CAAC;EAE/E;;SARWJ,mBAAmB;;mBAAnBA,MAAmB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAnBX,MAAmB;EAAAY,OAAA,EAAnBZ,MAAmB,CAAAa,IAAA;EAAAC,UAAA,EAFlB;AAAM;SAEPd,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}