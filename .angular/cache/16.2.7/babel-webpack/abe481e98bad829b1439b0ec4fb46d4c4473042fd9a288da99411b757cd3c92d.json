{"ast":null,"code":"import _asyncToGenerator from \"/Users/mozartcatrina/Desktop/jorgito/registrApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { inject } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, sendPasswordResetEmail } from 'firebase/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getFirestore, setDoc, doc, getDoc } from '@angular/fire/firestore';\nimport { UtilsService } from './utils.service';\nimport * as i0 from \"@angular/core\";\nclass FirebaseService {\n  constructor() {\n    this.auth = inject(AngularFireAuth);\n    this.firestore = inject(AngularFirestore);\n    this.utilsSvc = inject(UtilsService);\n  }\n  getAuth() {\n    return getAuth();\n  }\n  signIn(user) {\n    return signInWithEmailAndPassword(getAuth(), user.email, user.password);\n  }\n  signUp(user) {\n    return createUserWithEmailAndPassword(getAuth(), user.email, user.password);\n  }\n  updateUser(displayName) {\n    return updateProfile(getAuth().currentUser, {\n      displayName\n    });\n  }\n  sendRecoveryEmail(email) {\n    return sendPasswordResetEmail(getAuth(), email);\n  }\n  signOut() {\n    getAuth().signOut();\n    localStorage.removeItem('user');\n    this.utilsSvc.routerLink('/auth');\n  }\n  setDocument(path, data) {\n    return setDoc(doc(getFirestore(), path), data);\n  }\n  getDocument(path) {\n    return _asyncToGenerator(function* () {\n      return (yield getDoc(doc(getFirestore(), path))).data();\n    })();\n  }\n}\n_class = FirebaseService;\n_class.ɵfac = function FirebaseService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { FirebaseService };","map":{"version":3,"names":["inject","AngularFireAuth","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","sendPasswordResetEmail","AngularFirestore","getFirestore","setDoc","doc","getDoc","UtilsService","FirebaseService","constructor","auth","firestore","utilsSvc","signIn","user","email","password","signUp","updateUser","displayName","currentUser","sendRecoveryEmail","signOut","localStorage","removeItem","routerLink","setDocument","path","data","getDocument","_asyncToGenerator","factory","ɵfac","providedIn"],"sources":["/Users/mozartcatrina/Desktop/jorgito/registrApp/src/app/services/firebase.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  updateProfile,\n  sendPasswordResetEmail,\n} from 'firebase/auth';\nimport { User } from '../models/user.model';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getFirestore, setDoc, doc, getDoc } from '@angular/fire/firestore';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  auth = inject(AngularFireAuth);\n  firestore = inject(AngularFirestore);\n  utilsSvc = inject(UtilsService);\n\n  getAuth() {\n    return getAuth();\n  }\n\n  signIn(user: User) {\n    return signInWithEmailAndPassword(getAuth(), user.email, user.password);\n  }\n\n  signUp(user: User) {\n    return createUserWithEmailAndPassword(getAuth(), user.email, user.password);\n  }\n\n  updateUser(displayName: string) {\n    return updateProfile(getAuth().currentUser, { displayName });\n  }\n\n  sendRecoveryEmail(email: string) {\n    return sendPasswordResetEmail(getAuth(), email);\n  }\n\n  signOut() {\n    getAuth().signOut();\n    localStorage.removeItem('user');\n    this.utilsSvc.routerLink('/auth');\n  }\n\n  setDocument(path: string, data: any) {\n    return setDoc(doc(getFirestore(), path), data);\n  }\n\n  async getDocument(path: string) {\n    return (await getDoc(doc(getFirestore(), path))).data();\n  }\n}\n"],"mappings":";;AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SACEC,OAAO,EACPC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,aAAa,EACbC,sBAAsB,QACjB,eAAe;AAEtB,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,YAAY,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,yBAAyB;AAC3E,SAASC,YAAY,QAAQ,iBAAiB;;AAE9C,MAGaC,eAAe;EAH5BC,YAAA;IAIE,KAAAC,IAAI,GAAGf,MAAM,CAACC,eAAe,CAAC;IAC9B,KAAAe,SAAS,GAAGhB,MAAM,CAACO,gBAAgB,CAAC;IACpC,KAAAU,QAAQ,GAAGjB,MAAM,CAACY,YAAY,CAAC;;EAE/BV,OAAOA,CAAA;IACL,OAAOA,OAAO,EAAE;EAClB;EAEAgB,MAAMA,CAACC,IAAU;IACf,OAAOhB,0BAA0B,CAACD,OAAO,EAAE,EAAEiB,IAAI,CAACC,KAAK,EAAED,IAAI,CAACE,QAAQ,CAAC;EACzE;EAEAC,MAAMA,CAACH,IAAU;IACf,OAAOf,8BAA8B,CAACF,OAAO,EAAE,EAAEiB,IAAI,CAACC,KAAK,EAAED,IAAI,CAACE,QAAQ,CAAC;EAC7E;EAEAE,UAAUA,CAACC,WAAmB;IAC5B,OAAOnB,aAAa,CAACH,OAAO,EAAE,CAACuB,WAAW,EAAE;MAAED;IAAW,CAAE,CAAC;EAC9D;EAEAE,iBAAiBA,CAACN,KAAa;IAC7B,OAAOd,sBAAsB,CAACJ,OAAO,EAAE,EAAEkB,KAAK,CAAC;EACjD;EAEAO,OAAOA,CAAA;IACLzB,OAAO,EAAE,CAACyB,OAAO,EAAE;IACnBC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACZ,QAAQ,CAACa,UAAU,CAAC,OAAO,CAAC;EACnC;EAEAC,WAAWA,CAACC,IAAY,EAAEC,IAAS;IACjC,OAAOxB,MAAM,CAACC,GAAG,CAACF,YAAY,EAAE,EAAEwB,IAAI,CAAC,EAAEC,IAAI,CAAC;EAChD;EAEMC,WAAWA,CAACF,IAAY;IAAA,OAAAG,iBAAA;MAC5B,OAAO,OAAOxB,MAAM,CAACD,GAAG,CAACF,YAAY,EAAE,EAAEwB,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAE;IAAC;EAC1D;;SArCWpB,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAuB,OAAA,EAAfvB,MAAe,CAAAwB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPzB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}