{"ast":null,"code":"import { Html5QrcodeScanType, Html5QrcodeConstants } from \"../../core\";\nvar ScanTypeSelector = function () {\n  function ScanTypeSelector(supportedScanTypes) {\n    this.supportedScanTypes = this.validateAndReturnScanTypes(supportedScanTypes);\n  }\n  ScanTypeSelector.prototype.getDefaultScanType = function () {\n    return this.supportedScanTypes[0];\n  };\n  ScanTypeSelector.prototype.hasMoreThanOneScanType = function () {\n    return this.supportedScanTypes.length > 1;\n  };\n  ScanTypeSelector.prototype.isCameraScanRequired = function () {\n    for (var _i = 0, _a = this.supportedScanTypes; _i < _a.length; _i++) {\n      var scanType = _a[_i];\n      if (ScanTypeSelector.isCameraScanType(scanType)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  ScanTypeSelector.isCameraScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_CAMERA;\n  };\n  ScanTypeSelector.isFileScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_FILE;\n  };\n  ScanTypeSelector.prototype.validateAndReturnScanTypes = function (supportedScanTypes) {\n    if (!supportedScanTypes || supportedScanTypes.length === 0) {\n      return Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE;\n    }\n    var maxExpectedValues = Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.length;\n    if (supportedScanTypes.length > maxExpectedValues) {\n      throw \"Max \".concat(maxExpectedValues, \" values expected for \") + \"supportedScanTypes\";\n    }\n    for (var _i = 0, supportedScanTypes_1 = supportedScanTypes; _i < supportedScanTypes_1.length; _i++) {\n      var scanType = supportedScanTypes_1[_i];\n      if (!Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.includes(scanType)) {\n        throw \"Unsupported scan type \".concat(scanType);\n      }\n    }\n    return supportedScanTypes;\n  };\n  return ScanTypeSelector;\n}();\nexport { ScanTypeSelector };","map":{"version":3,"names":["Html5QrcodeScanType","Html5QrcodeConstants","ScanTypeSelector","supportedScanTypes","validateAndReturnScanTypes","prototype","getDefaultScanType","hasMoreThanOneScanType","length","isCameraScanRequired","_i","_a","scanType","isCameraScanType","SCAN_TYPE_CAMERA","isFileScanType","SCAN_TYPE_FILE","DEFAULT_SUPPORTED_SCAN_TYPE","maxExpectedValues","concat","supportedScanTypes_1","includes"],"sources":["/Users/mozartcatrina/Desktop/jorgito/registrApp/node_modules/html5-qrcode/esm/ui/scanner/scan-type-selector.js"],"sourcesContent":["import { Html5QrcodeScanType, Html5QrcodeConstants } from \"../../core\";\nvar ScanTypeSelector = (function () {\n    function ScanTypeSelector(supportedScanTypes) {\n        this.supportedScanTypes = this.validateAndReturnScanTypes(supportedScanTypes);\n    }\n    ScanTypeSelector.prototype.getDefaultScanType = function () {\n        return this.supportedScanTypes[0];\n    };\n    ScanTypeSelector.prototype.hasMoreThanOneScanType = function () {\n        return this.supportedScanTypes.length > 1;\n    };\n    ScanTypeSelector.prototype.isCameraScanRequired = function () {\n        for (var _i = 0, _a = this.supportedScanTypes; _i < _a.length; _i++) {\n            var scanType = _a[_i];\n            if (ScanTypeSelector.isCameraScanType(scanType)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ScanTypeSelector.isCameraScanType = function (scanType) {\n        return scanType === Html5QrcodeScanType.SCAN_TYPE_CAMERA;\n    };\n    ScanTypeSelector.isFileScanType = function (scanType) {\n        return scanType === Html5QrcodeScanType.SCAN_TYPE_FILE;\n    };\n    ScanTypeSelector.prototype.validateAndReturnScanTypes = function (supportedScanTypes) {\n        if (!supportedScanTypes || supportedScanTypes.length === 0) {\n            return Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE;\n        }\n        var maxExpectedValues = Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.length;\n        if (supportedScanTypes.length > maxExpectedValues) {\n            throw \"Max \".concat(maxExpectedValues, \" values expected for \")\n                + \"supportedScanTypes\";\n        }\n        for (var _i = 0, supportedScanTypes_1 = supportedScanTypes; _i < supportedScanTypes_1.length; _i++) {\n            var scanType = supportedScanTypes_1[_i];\n            if (!Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE\n                .includes(scanType)) {\n                throw \"Unsupported scan type \".concat(scanType);\n            }\n        }\n        return supportedScanTypes;\n    };\n    return ScanTypeSelector;\n}());\nexport { ScanTypeSelector };\n"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,oBAAoB,QAAQ,YAAY;AACtE,IAAIC,gBAAgB,GAAI,YAAY;EAChC,SAASA,gBAAgBA,CAACC,kBAAkB,EAAE;IAC1C,IAAI,CAACA,kBAAkB,GAAG,IAAI,CAACC,0BAA0B,CAACD,kBAAkB,CAAC;EACjF;EACAD,gBAAgB,CAACG,SAAS,CAACC,kBAAkB,GAAG,YAAY;IACxD,OAAO,IAAI,CAACH,kBAAkB,CAAC,CAAC,CAAC;EACrC,CAAC;EACDD,gBAAgB,CAACG,SAAS,CAACE,sBAAsB,GAAG,YAAY;IAC5D,OAAO,IAAI,CAACJ,kBAAkB,CAACK,MAAM,GAAG,CAAC;EAC7C,CAAC;EACDN,gBAAgB,CAACG,SAAS,CAACI,oBAAoB,GAAG,YAAY;IAC1D,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,IAAI,CAACR,kBAAkB,EAAEO,EAAE,GAAGC,EAAE,CAACH,MAAM,EAAEE,EAAE,EAAE,EAAE;MACjE,IAAIE,QAAQ,GAAGD,EAAE,CAACD,EAAE,CAAC;MACrB,IAAIR,gBAAgB,CAACW,gBAAgB,CAACD,QAAQ,CAAC,EAAE;QAC7C,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB,CAAC;EACDV,gBAAgB,CAACW,gBAAgB,GAAG,UAAUD,QAAQ,EAAE;IACpD,OAAOA,QAAQ,KAAKZ,mBAAmB,CAACc,gBAAgB;EAC5D,CAAC;EACDZ,gBAAgB,CAACa,cAAc,GAAG,UAAUH,QAAQ,EAAE;IAClD,OAAOA,QAAQ,KAAKZ,mBAAmB,CAACgB,cAAc;EAC1D,CAAC;EACDd,gBAAgB,CAACG,SAAS,CAACD,0BAA0B,GAAG,UAAUD,kBAAkB,EAAE;IAClF,IAAI,CAACA,kBAAkB,IAAIA,kBAAkB,CAACK,MAAM,KAAK,CAAC,EAAE;MACxD,OAAOP,oBAAoB,CAACgB,2BAA2B;IAC3D;IACA,IAAIC,iBAAiB,GAAGjB,oBAAoB,CAACgB,2BAA2B,CAACT,MAAM;IAC/E,IAAIL,kBAAkB,CAACK,MAAM,GAAGU,iBAAiB,EAAE;MAC/C,MAAM,MAAM,CAACC,MAAM,CAACD,iBAAiB,EAAE,uBAAuB,CAAC,GACzD,oBAAoB;IAC9B;IACA,KAAK,IAAIR,EAAE,GAAG,CAAC,EAAEU,oBAAoB,GAAGjB,kBAAkB,EAAEO,EAAE,GAAGU,oBAAoB,CAACZ,MAAM,EAAEE,EAAE,EAAE,EAAE;MAChG,IAAIE,QAAQ,GAAGQ,oBAAoB,CAACV,EAAE,CAAC;MACvC,IAAI,CAACT,oBAAoB,CAACgB,2BAA2B,CAChDI,QAAQ,CAACT,QAAQ,CAAC,EAAE;QACrB,MAAM,wBAAwB,CAACO,MAAM,CAACP,QAAQ,CAAC;MACnD;IACJ;IACA,OAAOT,kBAAkB;EAC7B,CAAC;EACD,OAAOD,gBAAgB;AAC3B,CAAC,CAAC,CAAE;AACJ,SAASA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}